name: Next.js Application - Build, Archive, and Release on Main Branch

on:
  push:
    branches:
      - main
  pull_request:
    types: [closed]
    branches:
      - main

jobs:
  api-tests:
    name: Run API Tests
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true || github.event_name == 'push'

    strategy:
      matrix:
        node-version: [22.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install NPM dependencies
        run: npm ci

      - name: Run API tests
        env:
          NODE_ENV: test
          DATABASE_URL: ${{ secrets.DB_PROD_MONGODB_URI }}
        run: npm run test:api

  build-and-archive:
    name: Build and Archive Next.js Application
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main' && needs.api-tests.result == 'success'
    needs: api-tests

    strategy:
      matrix:
        node-version: [22.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install NPM dependencies
        run: npm ci

      - name: Build static website
        id: build
        env:
          NODE_ENV: production
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          NEXT_PUBLIC_SENTRY_DSN: ${{ secrets.NEXT_PUBLIC_SENTRY_DSN }}
          DATABASE_URL: ${{ secrets.DB_PROD_MONGODB_URI }}
          NEXT_PUBLIC_APP_URL: ${{ secrets.NEXT_PUBLIC_APP_URL }}
          RESEND_API_KEY_PROD: ${{ secrets.RESEND_API_KEY_PROD }}
          RESEND_FROM_EMAIL_PROD: ${{ secrets.RESEND_FROM_EMAIL_PROD }}
        run: |
          echo "Starting build process..."
          npm run build
          echo "Build completed successfully"
          echo "build_success=true" >> $GITHUB_OUTPUT

      - name: Verify build output
        if: steps.build.outputs.build_success == 'true'
        run: |
          echo "Verifying build output..."
          if [ -d ".next" ]; then
            echo "Build output directory exists"
            ls -la .next/
          else
            echo "Build output directory not found"
            exit 1
          fi

      - name: Archive Release
        if: steps.build.outputs.build_success == 'true'
        uses: thedoctor0/zip-release@0.7.5
        with:
          type: "zip"
          filename: "release.zip"

      - name: Upload Release Artifact
        if: steps.build.outputs.build_success == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: release-archive
          path: release.zip

      - name: Build Failed - Upload Logs
        if: failure() && steps.build.conclusion == 'failure'
        uses: actions/upload-artifact@v4
        with:
          name: build-logs
          path: |
            .next/
            *.log
            npm-debug.log*
            yarn-debug.log*
            yarn-error.log*

  release:
    name: Release to GitHub
    runs-on: ubuntu-latest
    needs: [api-tests, build-and-archive]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main' && needs.build-and-archive.result == 'success'

    strategy:
      matrix:
        node-version: [22.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Download Release Artifact
        uses: actions/download-artifact@v4
        with:
          name: release-archive

      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npx semantic-release
